# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'socket'
# TODO https://stefanwrobel.com/how-to-make-vagrant-performance-not-suck

module Vagrant
  @default_machines = {
    web: { primary: true,  active: true,  memory: '1024', subdomains: []},
    db:  { primary: false, active: false, memory: '512',  subdomains: []},
  }

  def self.default_machines
    @default_machines
  end

  def self.configure_machines?
    @configure_machines
  end

  def self.configure_machines(machines = {})
    @configure_machines = true

    @default_machines.each do |type, options|
      options.merge!(machines[type] || {})
    end

    if block_given?
      Vagrant.configure(2) do |config|
        yield config
      end
    end
  end

  def self.free_ip(type)
    ip_file = ".vagrant/#{type}_ip"
    return File.readlines(ip_file).first.strip if File.exist?(ip_file)

    network_file = '.vagrant/network'
    network = File.exist?(network_file) ? File.readlines(network_file).first.strip : ''
    networks = [''].concat Socket.getifaddrs.map{ |i| i.addr.ip_address.sub(/\.\d+$/, '') if i.addr.ipv4? }.compact
    loop do
      break unless networks.include?(network)
      network = "192.168.#{rand(4..254)}"
    end
    File.open(network_file, 'w') { |f| f.write(network) }
    ip = "#{network}.#{rand(2..254)}"
    File.open(ip_file, 'w') { |f| f.write(ip) }
    ip
  end
end

Vagrant.configure(2) do |config|
  if Vagrant.configure_machines?
    config.vm.box = 'bento/ubuntu-16.04'

    config.ssh.forward_agent = true

    if Vagrant.has_plugin? 'vagrant-hostmanager'
      config.hostmanager.enabled = true
      config.hostmanager.manage_host = true
    end

    Vagrant.default_machines.each do |type, options|
      next unless options[:active]
      hostname = "vagrant-#{type}.test"
      config.vm.define type, primary: options[:primary] do |node|
        node.vm.hostname = hostname
        node.vm.network :private_network, ip: (ip = Vagrant.free_ip(type))
        if Vagrant.has_plugin?('vagrant-hostmanager') && options[:subdomains].any?
          node.hostmanager.aliases = options[:subdomains].map do |subdomain|
            "#{subdomain}.#{hostname}"
          end
        end

        config.vm.provider :virtualbox do |vb|
          vb.memory = options[:memory]
          vb.name = "#{type}-#{ip}"
        end
      end
    end

    # TODO look at Gemfile.lock instead
    if File.exist? '.gem-dev'
      paths = File.readlines('.gem-dev').map(&:strip).compact
      paths.each do |root|
        if (dir = Pathname.new(root).expand_path).exist?
          config.vm.synced_folder dir.to_s, dir.to_s, type: 'nfs'
        end
      end
    end
  end
end
