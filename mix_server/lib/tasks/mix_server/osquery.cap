namespace :osquery do
  %w(start stop restart).each do |action|
    desc "#{action.capitalize} osquery service"
    task action do
      on release_roles :all do
        execute :sudo, :osqueryctl, action
      end
    end
    before "osquery:#{action}", 'osquery:config_check' unless action == 'stop'
  end

  desc "Config check osquery service"
  task :config_check do
    on release_roles :all do
      if test("[ $(sudo osqueryctl config-check 2>&1 >/dev/null | grep -c 'Error reading') -eq 0 ]")
        info 'config [OK]'
      else
        abort("osquery configuration is invalid! (Make sure osquery configuration files are readable and correctly formated.)")
      end
    end
  end

  desc 'Export osquery configuration files'
  task :push do
    on release_roles :all do
      template_push 'osquery/osquery.conf', '/etc/osquery/osquery.conf'
      template_push 'osquery/osquery.flags', '/etc/osquery/osquery.flags.default'
      logrotate_path = '/etc/logrotate.d/osquery'
      template_push 'osquery/logrotate', logrotate_path
      execute :sudo, :chown, 'root:root', logrotate_path
      execute :sudo, :chmod, 644, logrotate_path
    end
  end
end
