#!/usr/bin/env ruby

require_relative '../config/boot'

WEB_TOOLS = File.expand_path('..', __dir__)
# TODO extract from jestConfig.roots in jest.config.js instead
MIX_ADMIN = File.expand_path(Gem.loaded_specs['mix_admin'].gem_dir)
EXT_COFFEE = File.expand_path(Gem.loaded_specs['ext_coffee'].gem_dir)
dirs = %W(
  app/javascript/concepts
  app/javascript/core_ext
  #{MIX_ADMIN}/lib/javascript
  #{EXT_COFFEE}/lib/javascript
  #{EXT_COFFEE}/vendor/javascript
  #{EXT_COFFEE}/test/fixtures/files
  test/fixtures/files
)
command, *extra_dirs = ARGV
coffee = 'node_modules/.bin/coffee'
Dir.chdir(WEB_TOOLS) do
  dirs.select!{ |dir| Dir.exist? dir }
  dirs.reject!{ |dir| dir.start_with? MIX_ADMIN, EXT_COFFEE } if command.end_with? '-app'
  dirs.select!{ |dir| dir.start_with? MIX_ADMIN, EXT_COFFEE } if command.end_with? '-lib'
  if File.executable? coffee
    case command
    when 'compile', 'compile-app', 'compile-lib'
      exec(coffee, '--bare', '--compile', '--map', *dirs, *extra_dirs)
    when 'watch', 'watch-app', 'watch-lib'
      exec(coffee, '--bare', '--compile', '--map', '--watch', *dirs, *extra_dirs)
    when 'clobber', 'clobber-app', 'clobber-lib'
      (dirs + extra_dirs).each do |dir|
        Dir["#{dir}/**/*.coffee"].each do |file|
          FileUtils.rm_f file.sub(/\.coffee$/, '.js')
          FileUtils.rm_f file.sub(/\.coffee$/, '.js.map')
        end
      end
    else
      puts "supported commands are 'compile', 'watch' and 'clobber', but '#{command}' was given"
      puts "now running '#{coffee}' instead of 'bin/coffee'"
      exec(coffee, *ARGV)
    end
  else
    $stderr.puts "'#{coffee}' executable was not detected."
    exit 1
  end
end
